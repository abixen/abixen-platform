version: '2'

services:
  # we need to have some image defined to limit repetition of logging parameters
  # and 'hello-world' is one of the smallest
  base:
    image: hello-world
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:12201
    volumes:
      - ./monitoring/jolokia-jvm-1.3.5-agent.jar:/jolokia-jvm-1.3.5-agent.jar:ro

  redis:
    image: redis:3.0
    hostname: redis
    extends:
      service: base

  rabbitmq:
    image: rabbitmq:3.6.6-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    extends:
      service: base

  discovery:
    image: abixen/abixen-platform-eureka
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.jar
    ports:
      - "8761:8761"
    extends:
      service: base

  configuration:
    image: abixen/abixen-platform-configuration
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.jar
    depends_on:
      - discovery
    extends:
      service: base

  gateway:
    image: abixen/abixen-platform-gateway
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.jar
    depends_on:
      - discovery
      - configuration
      - redis
      - core
      - business-intelligence-service
      - web-content-service
      - zipkin
    extends:
      service: base

  business-intelligence-service:
    image: abixen/abixen-platform-business-intelligence-service
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.jar
    depends_on:
      - discovery
      - configuration
      - business-intelligence-service-postgres-database
      - rabbitmq
      - zipkin
    extends:
      service: base

  web-content-service:
    image: abixen/abixen-platform-web-content-service
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx1024m -jar /app.jar
    depends_on:
      - discovery
      - configuration
      - web-content-service-postgres-database
      - rabbitmq
      - zipkin
    extends:
      service: base

  core:
    image: abixen/abixen-platform-core
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx1024m -jar /app.jar
    depends_on:
      - discovery
      - configuration
      - redis
      - core-postgres-database
      - rabbitmq
      - zipkin
    volumes:
      - ../data/image-library:/data/image-library
    extends:
      service: base

  web-client:
    image: abixen/abixen-platform-web-client
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.war
    depends_on:
     - discovery
     - configuration
     - gateway
     - core
     - zipkin
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:abixen-platform.example.com"
      - "traefik.backend.loadbalancer.sticky=true"
    ports:
      - "9010:9010"
      - "18080:8080"
    extends:
      service: base

  hystrix-dashboard:
    image: abixen/abixen-platform-hystrix-dashboard
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.jar
    ports:
      - "8989:8989"
    depends_on:
     - gateway
     - core
     - business-intelligence-service
     - web-content-service
    extends:
      service: base

  zipkin:
    image: abixen/abixen-platform-zipkin
    command: -javaagent:/jolokia-jvm-1.3.5-agent.jar=port=7777,host=0.0.0.0,discoveryEnabled=false -Xmx512m -jar /app.jar
    ports:
      - "9411:9411"
    depends_on:
     - rabbitmq
     - configuration
    extends:
      service: base

  zipkin-web:
    image: abixen/zipkin-web
    build: ../zipkin-web
    ports:
      - "9412:9412"
    depends_on:
     - zipkin
    extends:
      service: base

  load-balancer:
    image: traefik:v1.1.2-alpine
    command: --web --docker --docker.domain=devd.io --logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
    depends_on:
      - web-client
    extends:
      service: base

  core-postgres-database:
    image: postgres:9.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: fy2Lkxw201sV
      POSTGRES_USER: abixen
      POSTGRES_DB: abixen_platform_core
    volumes:
      - vol-core-db:/var/lib/postgresql/data
    extends:
      service: base

  business-intelligence-service-postgres-database:
    image: postgres:9.4
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: fy2Lkxw201sV
      POSTGRES_USER: abixen
      POSTGRES_DB: abixen_platform_businessintelligence_service
    volumes:
      - vol-businessintelligence-db:/var/lib/postgresql/data
    extends:
      service: base

  web-content-service-postgres-database:
    image: postgres:9.4
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: fy2Lkxw201sV
      POSTGRES_USER: abixen
      POSTGRES_DB: abixen_platform_web_content_service
    volumes:
      - vol-web-content-db:/var/lib/postgresql/data
    extends:
      service: base

# Logging components

  elasticsearch:
    image: elasticsearch:5-alpine
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"

  logstash:
    image: logstash:5-alpine
    command: logstash -e 'input { gelf { } } filter { } output { elasticsearch { hosts => "elasticsearch:9200" } }'
    # uncomment to enable output of all incoming messages to stdout of logstash container
    # command: logstash -e 'input { gelf { } } filter { } output { elasticsearch { hosts => "elasticsearch:9200" } stdout { codec => rubydebug } }'

    ports:
      - "12201:12201/udp"
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:5
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"

networks:
  default:

volumes:
  vol-web-content-db:
  vol-businessintelligence-db:
  vol-core-db:
